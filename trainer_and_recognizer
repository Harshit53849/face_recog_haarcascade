import numpy as np
import cv2
import os
from PIL import Image
import time

recognizer = cv2.face.LBPHFaceRecognizer_create()
facecascade = cv2.CascadeClassifier('cascade/data/haarcascade_frontalface_default.xml')
font=cv2.FONT_HERSHEY_SIMPLEX
path = 'dataset'

# trainer from line 13 to line 33
def getImageAndLabels(path):
    imagePaths = [os.path.join(path,f) for f in os.listdir(path)]
    faceSamples=[]
    ids=[]
    for imagePath in imagePaths:
        PIL_img = Image.open(imagePath).convert('L')
        img_numpy = np.array(PIL_img,'uint8')
        id = int(os.path.split(imagePath)[-1].split('.')[1])
        faces = facecascade.detectMultiScale(img_numpy)
        for (x,y,w,h) in faces:
            faceSamples.append(img_numpy[y:y+h,x:x+w])
            ids.append(id)
    return faceSamples,ids

print('\n [INFO] Training faces. It will take few seconds')

faces,ids = getImageAndLabels(path)
recognizer.train(faces, np.array(ids))

recognizer.write('trainer/trainer.yml')
print('exiting now')

#recogniser from line 37 to line 76

recognizer.read('trainer/trainer.yml')

cap = cv2.VideoCapture(0)
minW=0.1*cap.get(3)
minH = 0.1*cap.get(4)
penalty = 0
grace = 0

while True:
    ret, img = cap.read()
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = facecascade.detectMultiScale(gray,scaleFactor=1.2,
                                         minNeighbors=5,minSize=(int(minW),int(minH)))
    for (x,y,w,h) in faces:
        cv2.rectangle(img,(x,y),(x+w,y+h), (0,255,0),2)
        id,confidence = recognizer.predict(gray[y:y+h,x:x+w])

        if confidence<45:
            name=id
            grace += 1

            if grace > 10:
                print('access granted')
                cap.release()
                cv2.destroyAllWindows()
        else:
         penalty += 1
         name='unknown'

         if penalty >20:
             print('GetOut')



        cv2.putText(
            img,str(name),(x+5,y-5),font,1,(0,0,255),2
        )
        cv2.putText(
            img,str(confidence),(x+5,y+h-5),font,1,(0,0,255),1
        )

    cv2.imshow('video',img)
    k = cv2.waitKey(30) & 0xff
    if k == 27: #press 'ESC' to quit
        break

